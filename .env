# In all environments, the following files are loaded if they exist,
# the latter taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
# https://symfony.com/doc/current/configuration/secrets.html
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration

###> docker compose configuration ###
COMPOSE_PROJECT_NAME=eminence_backend

###> symfony/framework-bundle ###
APP_ENV=dev
APP_DEBUG=1
APP_SECRET=287be1565075bc2a664226f534f4dc38
TRUSTED_PROXIES=127.0.0.1,REMOTE_ADDR
###< symfony/framework-bundle ###

###> doctrine/doctrine-bundle ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
#
# DATABASE_URL for SQLite (example):
# DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
#
# DATABASE_URL for MySQL (example):
# DATABASE_URL="mysql://user:password@mysql:3306/symfony?serverVersion=8&charset=utf8mb4"
#
# DATABASE_URL for PostgreSQL (example):
DATABASE_URL="mysql://root:root@eminence_backend-mysql:3306/24SIK001?serverVersion=8.4.2&charset=utf8mb4"
###< doctrine/doctrine-bundle ###
BLIND_INDEX_KEY="test"
ENCRYPTION_KEY_PATH="%kernel.project_dir%/config/secrets/encryption.key"
###> lexik/jwt-authentication-bundle ###
JWT_SECRET_KEY=%kernel.project_dir%/config/secrets/jwt/private.pem
JWT_PUBLIC_KEY=%kernel.project_dir%/config/secrets/jwt/public.pem
JWT_PASSPHRASE=79cd9ced11589e8de27163bc37d53de6262ec81a9ff59b8e38b2720d5c5623a8
###< lexik/jwt-authentication-bundle ###

# DropBoxApi Ids
DROPBOX_API_KEY=d4c5add13e167c615ccc33674acc64de94ea36994f14504f577cea65b30e6963
DROPBOX_CLIENT_ID=e6d75a3df32c6290f427ec16afee577d

#EuroleApi Ids
EUROLA_CODE_GARAGE="37016"
EUROLA_PASSWORD="4332"

###> nelmio/cors-bundle ###
CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'
###< nelmio/cors-bundle ###

WEBAPP_URL=
###> database configuration ###
MYSQL_ROOT_PASSWORD=root
MYSQL_PASSWORD=password
MYSQL_DATABASE=db
MYSQL_USER=user

MYSQL_VERSION=8.4
###< database configuration ###

###> docker configuration ###
WEB_PORT_HTTP=8082
WEB_PORT_SSL=443
# XDEBUG_CONFIG possible values: main|osx. Use main value for Linux and Windows, osx value for MacOS.
XDEBUG_CONFIG=main
# Sometimes we need to use different xdebug versions, list of versions can be found here - https://pecl.php.net/package/xdebug
XDEBUG_VERSION=3.3.2
# MySQL INNODB_USE_NATIVE_AIO possible values: 1|0. Set to 0 when AIO interface is not supported on OSX. https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_use_native_aio
INNODB_USE_NATIVE_AIO=1
# Sometimes AWS MySQL RDS has SQL_MODE="NO_ENGINE_SUBSTITUTION" (https://github.com/awsdocs/amazon-rds-user-guide/issues/160) but MySQL default described here - https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_sql_mode
SQL_MODE="ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
###< docker configuration ###

###> symfony/mailer ###
# MAILER_DSN=null://null
###< symfony/mailer ###
